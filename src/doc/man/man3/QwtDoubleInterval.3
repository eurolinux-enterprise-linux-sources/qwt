.TH "QwtDoubleInterval" 3 "24 May 2008" "Version 5.1.1" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtDoubleInterval \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
A class representing an interval. 

The interval is represented by 2 doubles, the lower and the upper limit. 
.PP
Definition at line 21 of file qwt_double_interval.h.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtDoubleInterval\fP ()"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP (double minValue, double maxValue)"
.br
.ti -1c
.RI "void \fBsetInterval\fP (double minValue, double maxValue)"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBnormalized\fP () const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBinverted\fP () const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBlimited\fP (double minValue, double maxValue) const"
.br
.ti -1c
.RI "int \fBoperator==\fP (const \fBQwtDoubleInterval\fP &) const"
.br
.ti -1c
.RI "int \fBoperator!=\fP (const \fBQwtDoubleInterval\fP &) const"
.br
.ti -1c
.RI "double \fBminValue\fP () const"
.br
.ti -1c
.RI "double \fBmaxValue\fP () const"
.br
.ti -1c
.RI "double \fBwidth\fP () const"
.br
.ti -1c
.RI "void \fBsetMinValue\fP (double)"
.br
.ti -1c
.RI "void \fBsetMaxValue\fP (double)"
.br
.ti -1c
.RI "bool \fBcontains\fP (double value) const "
.br
.ti -1c
.RI "bool \fBintersects\fP (const \fBQwtDoubleInterval\fP &) const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBintersect\fP (const \fBQwtDoubleInterval\fP &) const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBunite\fP (const \fBQwtDoubleInterval\fP &) const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBoperator|\fP (const \fBQwtDoubleInterval\fP &) const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBoperator &\fP (const \fBQwtDoubleInterval\fP &) const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP & \fBoperator|=\fP (const \fBQwtDoubleInterval\fP &)"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP & \fBoperator &=\fP (const \fBQwtDoubleInterval\fP &)"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBextend\fP (double value) const "
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBoperator|\fP (double) const"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP & \fBoperator|=\fP (double)"
.br
.ti -1c
.RI "bool \fBisValid\fP () const"
.br
.ti -1c
.RI "bool \fBisNull\fP () const"
.br
.ti -1c
.RI "void \fBinvalidate\fP ()"
.br
.ti -1c
.RI "\fBQwtDoubleInterval\fP \fBsymmetrize\fP (double value) const "
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtDoubleInterval::QwtDoubleInterval ()\fC [inline]\fP"
.PP
Default Constructor. 
.PP
Creates an invalid interval [0.0, -1.0] 
.PP
\fBSee also:\fP
.RS 4
\fBsetInterval\fP, \fBisValid\fP 
.RE
.PP

.PP
Definition at line 77 of file qwt_double_interval.h.
.PP
Referenced by extend(), intersect(), inverted(), limited(), normalized(), symmetrize(), and unite().
.SS "QwtDoubleInterval::QwtDoubleInterval (double minValue, double maxValue)\fC [inline]\fP"
.PP
Constructor
.PP
\fBParameters:\fP
.RS 4
\fIminValue\fP Minimum value 
.br
\fImaxValue\fP Maximum value 
.RE
.PP

.PP
Definition at line 89 of file qwt_double_interval.h.
.SH "Member Function Documentation"
.PP 
.SS "void QwtDoubleInterval::setInterval (double minValue, double maxValue)\fC [inline]\fP"
.PP
Assign the limits of the interval
.PP
\fBParameters:\fP
.RS 4
\fIminValue\fP Minimum value 
.br
\fImaxValue\fP Maximum value 
.RE
.PP

.PP
Definition at line 101 of file qwt_double_interval.h.
.PP
Referenced by QwtLog10ScaleEngine::autoScale().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::normalized () const"
.PP
Normalize the limits of the interval. 
.PP
If \fBmaxValue()\fP < \fBminValue()\fP the limits will be inverted. 
.PP
\fBReturns:\fP
.RS 4
Normalized interval
.RE
.PP
\fBSee also:\fP
.RS 4
\fBisValid\fP, \fBinverted\fP 
.RE
.PP

.PP
Definition at line 28 of file qwt_double_interval.cpp.
.PP
References isValid(), and QwtDoubleInterval().
.PP
Referenced by QwtLinearScaleEngine::autoScale(), and QwtLog10ScaleEngine::divideScale().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::inverted () const"
.PP
Invert the limits of the interval 
.PP
\fBReturns:\fP
.RS 4
Inverted interval 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBnormalized\fP 
.RE
.PP

.PP
Definition at line 43 of file qwt_double_interval.cpp.
.PP
References QwtDoubleInterval().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::limited (double lBound, double hBound) const"
.PP
Limit the interval
.PP
\fBParameters:\fP
.RS 4
\fIlBound\fP Lower limit 
.br
\fIhBound\fP Upper limit
.RE
.PP
\fBReturns:\fP
.RS 4
Limited interval 
.RE
.PP

.PP
Definition at line 159 of file qwt_double_interval.cpp.
.PP
References isValid(), maxValue(), minValue(), and QwtDoubleInterval().
.PP
Referenced by QwtLog10ScaleEngine::autoScale(), and QwtLog10ScaleEngine::divideScale().
.SS "int QwtDoubleInterval::operator== (const \fBQwtDoubleInterval\fP &) const\fC [inline]\fP"
.PP
Compare two intervals. 
.PP
Definition at line 172 of file qwt_double_interval.h.
.PP
References d_maxValue, and d_minValue.
.SS "int QwtDoubleInterval::operator!= (const \fBQwtDoubleInterval\fP &) const\fC [inline]\fP"
.PP
Compare two intervals. 
.PP
Definition at line 179 of file qwt_double_interval.h.
.SS "double QwtDoubleInterval::minValue () const\fC [inline]\fP"
.PP
\fBReturns:\fP
.RS 4
Lower limit of the interval 
.RE
.PP

.PP
Definition at line 128 of file qwt_double_interval.h.
.PP
Referenced by QwtLinearScaleEngine::align(), QwtLog10ScaleEngine::autoScale(), QwtLinearScaleEngine::autoScale(), QwtLinearColorMap::colorIndex(), QwtColorMap::colorTable(), QwtScaleEngine::contains(), QwtLog10ScaleEngine::divideScale(), intersect(), intersects(), limited(), QwtLog10ScaleEngine::log10(), QwtLog10ScaleEngine::pow10(), QwtAlphaColorMap::rgb(), QwtLinearColorMap::rgb(), QwtScaleDiv::setInterval(), QwtAbstractScale::setScale(), unite(), and QwtPlot::updateAxes().
.SS "double QwtDoubleInterval::maxValue () const\fC [inline]\fP"
.PP
\fBReturns:\fP
.RS 4
Upper limit of the interval 
.RE
.PP

.PP
Definition at line 134 of file qwt_double_interval.h.
.PP
Referenced by QwtLinearScaleEngine::align(), QwtLog10ScaleEngine::autoScale(), QwtLinearScaleEngine::autoScale(), QwtLinearColorMap::colorIndex(), QwtScaleEngine::contains(), QwtLog10ScaleEngine::divideScale(), intersect(), intersects(), limited(), QwtLog10ScaleEngine::log10(), QwtLog10ScaleEngine::pow10(), QwtScaleDiv::setInterval(), QwtAbstractScale::setScale(), unite(), and QwtPlot::updateAxes().
.SS "double QwtDoubleInterval::width () const\fC [inline]\fP"
.PP
Return the width of an interval The width of invalid intervals is 0.0, otherwise the result is \fBmaxValue()\fP - \fBminValue()\fP.
.PP
\fBSee also:\fP
.RS 4
\fBisValid\fP 
.RE
.PP

.PP
Definition at line 146 of file qwt_double_interval.h.
.PP
References isValid().
.PP
Referenced by QwtLog10ScaleEngine::autoScale(), QwtLinearScaleEngine::autoScale(), QwtLinearColorMap::colorIndex(), QwtColorMap::colorTable(), QwtScaleEngine::contains(), QwtLog10ScaleEngine::divideScale(), QwtLinearScaleEngine::divideScale(), QwtAlphaColorMap::rgb(), and QwtLinearColorMap::rgb().
.SS "void QwtDoubleInterval::setMinValue (double minValue)\fC [inline]\fP"
.PP
Assign the lower limit of the interval
.PP
\fBParameters:\fP
.RS 4
\fIminValue\fP Minimum value 
.RE
.PP

.PP
Definition at line 112 of file qwt_double_interval.h.
.PP
Referenced by QwtLinearScaleEngine::autoScale().
.SS "void QwtDoubleInterval::setMaxValue (double maxValue)\fC [inline]\fP"
.PP
Assign the upper limit of the interval
.PP
\fBParameters:\fP
.RS 4
\fImaxValue\fP Maximum value 
.RE
.PP

.PP
Definition at line 122 of file qwt_double_interval.h.
.PP
Referenced by QwtLinearScaleEngine::autoScale().
.SS "bool QwtDoubleInterval::contains (double value) const"
.PP
Test if a value is inside an interval
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP Value 
.RE
.PP
\fBReturns:\fP
.RS 4
true, if value >= \fBminValue()\fP && value <= \fBmaxValue()\fP 
.RE
.PP

.PP
Definition at line 54 of file qwt_double_interval.cpp.
.PP
References isValid().
.PP
Referenced by QwtRasterData::contourLines().
.SS "bool QwtDoubleInterval::intersects (const \fBQwtDoubleInterval\fP & interval) const"
.PP
Test if two intervals overlap 
.PP
Definition at line 119 of file qwt_double_interval.cpp.
.PP
References isValid(), maxValue(), and minValue().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::intersect (const \fBQwtDoubleInterval\fP &) const"
.PP
Intersect 2 intervals. 
.PP
Definition at line 83 of file qwt_double_interval.cpp.
.PP
References isValid(), maxValue(), minValue(), and QwtDoubleInterval().
.PP
Referenced by operator &().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::unite (const \fBQwtDoubleInterval\fP &) const"
.PP
Unite 2 intervals. 
.PP
Definition at line 63 of file qwt_double_interval.cpp.
.PP
References isValid(), maxValue(), minValue(), and QwtDoubleInterval().
.PP
Referenced by operator|().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::operator| (const \fBQwtDoubleInterval\fP & interval) const\fC [inline]\fP"
.PP
Union of two intervals 
.PP
\fBSee also:\fP
.RS 4
\fBunite\fP 
.RE
.PP

.PP
Definition at line 165 of file qwt_double_interval.h.
.PP
References unite().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::operator & (const \fBQwtDoubleInterval\fP & interval) const\fC [inline]\fP"
.PP
Intersection of two intervals 
.PP
\fBSee also:\fP
.RS 4
\fBintersect\fP 
.RE
.PP

.PP
Definition at line 155 of file qwt_double_interval.h.
.PP
References intersect().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::extend (double value) const"
.PP
Extend the interval
.PP
If value is below minValue, value becomes the lower limit. If value is above maxValue, value becomes the upper limit.
.PP
extend has no effect for invalid intervals
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP Value 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBisValid\fP 
.RE
.PP

.PP
Definition at line 185 of file qwt_double_interval.cpp.
.PP
References isValid(), and QwtDoubleInterval().
.PP
Referenced by QwtLog10ScaleEngine::autoScale(), QwtLinearScaleEngine::autoScale(), and operator|().
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::operator| (double value) const\fC [inline]\fP"
.PP
Extend an interval 
.PP
\fBSee also:\fP
.RS 4
\fBextend\fP 
.RE
.PP

.PP
Definition at line 188 of file qwt_double_interval.h.
.PP
References extend().
.SS "bool QwtDoubleInterval::isValid () const\fC [inline]\fP"
.PP
\fBReturns:\fP
.RS 4
true, if \fBminValue()\fP <= \fBmaxValue()\fP 
.RE
.PP

.PP
Definition at line 200 of file qwt_double_interval.h.
.PP
Referenced by QwtColorMap::colorTable(), QwtScaleEngine::contains(), contains(), QwtRasterData::contourLines(), extend(), intersect(), intersects(), limited(), normalized(), QwtScaleEngine::strip(), symmetrize(), unite(), QwtPlot::updateAxes(), and width().
.SS "bool QwtDoubleInterval::isNull () const\fC [inline]\fP"
.PP
\fBReturns:\fP
.RS 4
true, if \fBminValue()\fP >= \fBmaxValue()\fP 
.RE
.PP

.PP
Definition at line 194 of file qwt_double_interval.h.
.SS "void QwtDoubleInterval::invalidate ()\fC [inline]\fP"
.PP
Invalidate the interval
.PP
The limits are set to interval [0.0, -1.0] 
.PP
\fBSee also:\fP
.RS 4
\fBisValid\fP 
.RE
.PP

.PP
Definition at line 211 of file qwt_double_interval.h.
.SS "\fBQwtDoubleInterval\fP QwtDoubleInterval::symmetrize (double value) const"
.PP
Adjust the limit that is closer to value, so that value becomes the center of the interval.
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP Center 
.RE
.PP
\fBReturns:\fP
.RS 4
Interval with value as center 
.RE
.PP

.PP
Definition at line 140 of file qwt_double_interval.cpp.
.PP
References isValid(), and QwtDoubleInterval().
.PP
Referenced by QwtLinearScaleEngine::autoScale().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
