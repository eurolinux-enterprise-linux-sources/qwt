.TH "QwtAbstractScaleDraw" 3 "24 May 2008" "Version 5.1.1" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtAbstractScaleDraw \- 
.SH SYNOPSIS
.br
.PP
Inherited by \fBQwtRoundScaleDraw\fP, and \fBQwtScaleDraw\fP.
.PP
.SH "Detailed Description"
.PP 
A abstract base class for drawing scales. 

\fBQwtAbstractScaleDraw\fP can be used to draw linear or logarithmic scales.
.PP
After a scale division has been specified as a \fBQwtScaleDiv\fP object using \fBQwtAbstractScaleDraw::setScaleDiv(const QwtScaleDiv &s)\fP, the scale can be drawn with the \fBQwtAbstractScaleDraw::draw()\fP member. 
.PP
Definition at line 37 of file qwt_abstract_scale_draw.h.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBScaleComponent\fP { \fBBackbone\fP =  1, \fBTicks\fP =  2, \fBLabels\fP =  4 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtAbstractScaleDraw\fP ()"
.br
.ti -1c
.RI "\fBQwtAbstractScaleDraw\fP (const \fBQwtAbstractScaleDraw\fP &)"
.br
.ti -1c
.RI "virtual \fB~QwtAbstractScaleDraw\fP ()"
.br
.ti -1c
.RI "\fBQwtAbstractScaleDraw\fP & \fBoperator=\fP (const \fBQwtAbstractScaleDraw\fP &)"
.br
.ti -1c
.RI "void \fBsetScaleDiv\fP (const \fBQwtScaleDiv\fP &s)"
.br
.ti -1c
.RI "const \fBQwtScaleDiv\fP & \fBscaleDiv\fP () const"
.br
.ti -1c
.RI "void \fBsetTransformation\fP (\fBQwtScaleTransformation\fP *)"
.br
.ti -1c
.RI "const \fBQwtScaleMap\fP & \fBmap\fP () const"
.br
.ti -1c
.RI "void \fBenableComponent\fP (\fBScaleComponent\fP, bool enable=true)"
.br
.ti -1c
.RI "bool \fBhasComponent\fP (\fBScaleComponent\fP) const"
.br
.ti -1c
.RI "void \fBsetTickLength\fP (\fBQwtScaleDiv::TickType\fP, int length)"
.br
.ti -1c
.RI "int \fBtickLength\fP (\fBQwtScaleDiv::TickType\fP) const"
.br
.ti -1c
.RI "int \fBmajTickLength\fP () const"
.br
.ti -1c
.RI "void \fBsetSpacing\fP (int margin)"
.br
.ti -1c
.RI "int \fBspacing\fP () const"
.br
.ti -1c
.RI "virtual void \fBdraw\fP (QPainter *, const QPalette &) const"
.br
.ti -1c
.RI "virtual \fBQwtText\fP \fBlabel\fP (double) const"
.br
.ti -1c
.RI "virtual int \fBextent\fP (const QPen &, const QFont &) const=0"
.br
.ti -1c
.RI "void \fBsetMinimumExtent\fP (int)"
.br
.ti -1c
.RI "int \fBminimumExtent\fP () const"
.br
.ti -1c
.RI "\fBQwtScaleMap\fP & \fBscaleMap\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBdrawTick\fP (QPainter *painter, double value, int len) const=0"
.br
.ti -1c
.RI "virtual void \fBdrawBackbone\fP (QPainter *painter) const=0"
.br
.ti -1c
.RI "virtual void \fBdrawLabel\fP (QPainter *painter, double value) const=0"
.br
.ti -1c
.RI "void \fBinvalidateCache\fP ()"
.br
.ti -1c
.RI "const \fBQwtText\fP & \fBtickLabel\fP (const QFont &, double value) const"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtAbstractScaleDraw::ScaleComponent\fP"
.PP
Components of a scale
.PP
.IP "\(bu" 2
Backbone
.IP "\(bu" 2
Ticks
.IP "\(bu" 2
Labels
.PP
.PP
\fBSee also:\fP
.RS 4
\fBQwtAbstractScaleDraw::enableComponent\fP, \fBQwtAbstractScaleDraw::hasComponent\fP 
.RE
.PP

.PP
Definition at line 52 of file qwt_abstract_scale_draw.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtAbstractScaleDraw::QwtAbstractScaleDraw ()"
.PP
Constructor. 
.PP
The range of the scale is initialized to [0, 100], The spacing (distance between ticks and labels) is set to 4, the tick lengths are set to 4,6 and 8 pixels 
.PP
Definition at line 55 of file qwt_abstract_scale_draw.cpp.
.SS "QwtAbstractScaleDraw::QwtAbstractScaleDraw (const \fBQwtAbstractScaleDraw\fP &)"
.PP
Copy constructor. 
.PP
Definition at line 61 of file qwt_abstract_scale_draw.cpp.
.PP
References d_data.
.SS "QwtAbstractScaleDraw::~QwtAbstractScaleDraw ()\fC [virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 67 of file qwt_abstract_scale_draw.cpp.
.SH "Member Function Documentation"
.PP 
.SS "\fBQwtAbstractScaleDraw\fP & QwtAbstractScaleDraw::operator= (const \fBQwtAbstractScaleDraw\fP &)"
.PP
Assignment operator. 
.PP
Definition at line 72 of file qwt_abstract_scale_draw.cpp.
.PP
References d_data.
.SS "void QwtAbstractScaleDraw::setScaleDiv (const \fBQwtScaleDiv\fP & sd)"
.PP
Change the scale division 
.PP
\fBParameters:\fP
.RS 4
\fIsd\fP New scale division 
.RE
.PP

.PP
Definition at line 108 of file qwt_abstract_scale_draw.cpp.
.PP
References QwtScaleDiv::hBound(), and QwtScaleDiv::lBound().
.PP
Referenced by QwtAbstractScale::setAbstractScaleDraw(), QwtScaleWidget::setScaleDiv(), and QwtPlotScaleItem::updateScaleDiv().
.SS "const \fBQwtScaleDiv\fP & QwtAbstractScaleDraw::scaleDiv () const"
.PP
\fBReturns:\fP
.RS 4
scale division 
.RE
.PP

.PP
Definition at line 138 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtRoundScaleDraw::extent(), QwtScaleDraw::getBorderDistHint(), QwtScaleDraw::maxLabelHeight(), QwtScaleDraw::maxLabelWidth(), QwtScaleDraw::minLabelDist(), QwtScaleDraw::minLength(), QwtScaleWidget::setScaleDiv(), and QwtPlot::sizeHint().
.SS "void QwtAbstractScaleDraw::setTransformation (\fBQwtScaleTransformation\fP * transformation)"
.PP
Change the transformation of the scale 
.PP
\fBParameters:\fP
.RS 4
\fItransformation\fP New scale transformation 
.RE
.PP

.PP
Definition at line 119 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtPlotScaleItem::draw(), and QwtScaleWidget::setScaleDiv().
.SS "const \fBQwtScaleMap\fP & QwtAbstractScaleDraw::map () const"
.PP
\fBReturns:\fP
.RS 4
Map how to translate between scale and pixel values 
.RE
.PP

.PP
Definition at line 126 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtRoundScaleDraw::drawBackbone(), QwtScaleWidget::drawColorBar(), QwtRoundScaleDraw::drawLabel(), QwtScaleDraw::drawTick(), QwtRoundScaleDraw::drawTick(), QwtRoundScaleDraw::extent(), QwtScaleDraw::getBorderDistHint(), QwtScaleDraw::labelPosition(), and QwtScaleWidget::setScaleDiv().
.SS "void QwtAbstractScaleDraw::enableComponent (\fBScaleComponent\fP component, bool enable = \fCtrue\fP)"
.PP
En/Disable a component of the scale
.PP
\fBParameters:\fP
.RS 4
\fIcomponent\fP Scale component 
.br
\fIenable\fP On/Off
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtAbstractScaleDraw::hasComponent\fP 
.RE
.PP

.PP
Definition at line 86 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtDial::setScaleOptions().
.SS "bool QwtAbstractScaleDraw::hasComponent (\fBScaleComponent\fP component) const"
.PP
Check if a component is enabled 
.PP
\fBSee also:\fP
.RS 4
\fBQwtAbstractScaleDraw::enableComponent\fP 
.RE
.PP

.PP
Definition at line 99 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtRoundScaleDraw::drawLabel(), QwtScaleDraw::extent(), QwtRoundScaleDraw::extent(), QwtScaleDraw::getBorderDistHint(), QwtScaleDraw::labelPosition(), QwtScaleDraw::minLabelDist(), and QwtScaleDraw::minLength().
.SS "void QwtAbstractScaleDraw::setTickLength (\fBQwtScaleDiv::TickType\fP tickType, int length)"
.PP
Set the length of the ticks
.PP
\fBParameters:\fP
.RS 4
\fItickType\fP Tick type 
.br
\fIlength\fP New length
.RE
.PP
\fBWarning:\fP
.RS 4
the length is limited to [0..1000] 
.RE
.PP

.PP
Definition at line 306 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtDial::setScaleTicks().
.SS "int QwtAbstractScaleDraw::tickLength (\fBQwtScaleDiv::TickType\fP tickType) const"
.PP
Return the length of the ticks
.PP
\fBSee also:\fP
.RS 4
\fBQwtAbstractScaleDraw::setTickLength\fP, \fBQwtAbstractScaleDraw::majTickLength\fP 
.RE
.PP

.PP
Definition at line 331 of file qwt_abstract_scale_draw.cpp.
.SS "int QwtAbstractScaleDraw::majTickLength () const"
.PP
The same as QwtAbstractScaleDraw::tickLength(QwtScaleDiv::MajorTick). 
.PP
Definition at line 345 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtRoundScaleDraw::drawLabel(), QwtScaleDraw::extent(), QwtRoundScaleDraw::extent(), and QwtScaleDraw::labelPosition().
.SS "void QwtAbstractScaleDraw::setSpacing (int spacing)"
.PP
Set the spacing between tick and labels. 
.PP
The spacing is the distance between ticks and labels. The default spacing is 4 pixels.
.PP
\fBParameters:\fP
.RS 4
\fIspacing\fP Spacing
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtAbstractScaleDraw::spacing\fP 
.RE
.PP

.PP
Definition at line 247 of file qwt_abstract_scale_draw.cpp.
.SS "int QwtAbstractScaleDraw::spacing () const"
.PP
Get the spacing. 
.PP
The spacing is the distance between ticks and labels. The default spacing is 4 pixels.
.PP
\fBSee also:\fP
.RS 4
\fBQwtAbstractScaleDraw::setSpacing\fP 
.RE
.PP

.PP
Definition at line 263 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtRoundScaleDraw::drawLabel(), QwtScaleDraw::extent(), QwtRoundScaleDraw::extent(), and QwtScaleDraw::labelPosition().
.SS "void QwtAbstractScaleDraw::draw (QPainter * painter, const QPalette & palette) const\fC [virtual]\fP"
.PP
Draw the scale. 
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP The painter
.br
\fIpalette\fP Palette, text color is used for the labels, foreground color for ticks and backbone 
.RE
.PP

.PP
Definition at line 165 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtThermo::draw(), QwtSlider::draw(), QwtPlotScaleItem::draw(), QwtKnob::draw(), and QwtPlot::printScale().
.SS "\fBQwtText\fP QwtAbstractScaleDraw::label (double value) const\fC [virtual]\fP"
.PP
Convert a value into its representing label. 
.PP
The value is converted to a plain text using QLocale::system().toString(value). This method is often overloaded by applications to have individual labels.
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP Value 
.RE
.PP
\fBReturns:\fP
.RS 4
Label string. 
.RE
.PP

.PP
Reimplemented in \fBQwtDialScaleDraw\fP.
.PP
Definition at line 361 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtRoundScaleDraw::drawLabel(), QwtRoundScaleDraw::extent(), QwtDialScaleDraw::label(), and tickLabel().
.SS "virtual int QwtAbstractScaleDraw::extent (const QPen &, const QFont &) const\fC [pure virtual]\fP"
.PP
Calculate the extent
.PP
The extent is the distcance from the baseline to the outermost pixel of the scale draw in opposite to its orientation. It is at least \fBminimumExtent()\fP pixels.
.PP
\fBSee also:\fP
.RS 4
\fBsetMinimumExtent()\fP, \fBminimumExtent()\fP 
.RE
.PP

.PP
Implemented in \fBQwtRoundScaleDraw\fP, and \fBQwtScaleDraw\fP.
.SS "void QwtAbstractScaleDraw::setMinimumExtent (int minExtent)"
.PP
Set a minimum for the extent. 
.PP
The extent is calculated from the coomponents of the scale draw. In situations, where the labels are changing and the layout depends on the extent (f.e scrolling a scale), setting an upper limit as minimum extent will avoid jumps of the layout.
.PP
\fBParameters:\fP
.RS 4
\fIminExtent\fP Minimum extent
.RE
.PP
\fBSee also:\fP
.RS 4
\fBextent()\fP, \fBminimumExtent()\fP 
.RE
.PP

.PP
Definition at line 281 of file qwt_abstract_scale_draw.cpp.
.SS "int QwtAbstractScaleDraw::minimumExtent () const"
.PP
Get the minimum extent 
.PP
\fBSee also:\fP
.RS 4
\fBextent()\fP, \fBsetMinimumExtent()\fP 
.RE
.PP

.PP
Definition at line 293 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtScaleDraw::extent(), and QwtRoundScaleDraw::extent().
.SS "\fBQwtScaleMap\fP & QwtAbstractScaleDraw::scaleMap ()"
.PP
\fBReturns:\fP
.RS 4
Map how to translate between scale and pixel values 
.RE
.PP

.PP
Definition at line 132 of file qwt_abstract_scale_draw.cpp.
.PP
Referenced by QwtScaleDraw::drawTick(), QwtRoundScaleDraw::QwtRoundScaleDraw(), and QwtRoundScaleDraw::setAngleRange().
.SS "virtual void QwtAbstractScaleDraw::drawTick (QPainter * painter, double value, int len) const\fC [protected, pure virtual]\fP"
.PP
Draw a tick
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIvalue\fP Value of the tick 
.br
\fIlen\fP Lenght of the tick
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdrawBackbone()\fP, \fBdrawLabel()\fP 
.RE
.PP

.PP
Implemented in \fBQwtRoundScaleDraw\fP, and \fBQwtScaleDraw\fP.
.SS "virtual void QwtAbstractScaleDraw::drawBackbone (QPainter * painter) const\fC [protected, pure virtual]\fP"
.PP
Draws the baseline of the scale 
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdrawTick()\fP, \fBdrawLabel()\fP 
.RE
.PP

.PP
Implemented in \fBQwtRoundScaleDraw\fP, and \fBQwtScaleDraw\fP.
.SS "virtual void QwtAbstractScaleDraw::drawLabel (QPainter * painter, double value) const\fC [protected, pure virtual]\fP"
.PP
Draws the label for a major scale tick
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIvalue\fP Value
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdrawTick\fP, \fBdrawBackbone\fP 
.RE
.PP

.PP
Implemented in \fBQwtRoundScaleDraw\fP, and \fBQwtScaleDraw\fP.
.SS "void QwtAbstractScaleDraw::invalidateCache ()\fC [protected]\fP"
.PP
Invalidate the cache used by \fBQwtAbstractScaleDraw::tickLabel\fP
.PP
The cache is invalidated, when a new \fBQwtScaleDiv\fP is set. If the labels need to be changed. while the same \fBQwtScaleDiv\fP is set, \fBQwtAbstractScaleDraw::invalidateCache\fP needs to be called manually. 
.PP
Definition at line 404 of file qwt_abstract_scale_draw.cpp.
.SS "const \fBQwtText\fP & QwtAbstractScaleDraw::tickLabel (const QFont & font, double value) const\fC [protected]\fP"
.PP
Convert a value into its representing label and cache it. 
.PP
The conversion between value and label is called very often in the layout and painting code. Unfortunately the calculation of the label sizes might be slow (really slow for rich text in Qt4), so it's necessary to cache the labels.
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Font 
.br
\fIvalue\fP Value
.RE
.PP
\fBReturns:\fP
.RS 4
Tick label 
.RE
.PP

.PP
Definition at line 379 of file qwt_abstract_scale_draw.cpp.
.PP
References label(), and QwtText::setRenderFlags().
.PP
Referenced by QwtScaleDraw::boundingLabelRect(), QwtScaleDraw::drawLabel(), QwtRoundScaleDraw::drawLabel(), QwtRoundScaleDraw::extent(), and QwtScaleDraw::labelRect().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
