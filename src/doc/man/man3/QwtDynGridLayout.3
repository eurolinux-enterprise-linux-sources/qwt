.TH "QwtDynGridLayout" 3 "24 May 2008" "Version 5.1.1" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtDynGridLayout \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
The \fBQwtDynGridLayout\fP class lays out widgets in a grid, adjusting the number of columns and rows to the current size. 

\fBQwtDynGridLayout\fP takes the space it gets, divides it up into rows and columns, and puts each of the widgets it manages into the correct cell(s). It lays out as many number of columns as possible (limited by \fBmaxCols()\fP). 
.PP
Definition at line 32 of file qwt_dyngrid_layout.h.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtDynGridLayout\fP (QWidget *, int margin=0, int space=-1)"
.br
.ti -1c
.RI "\fBQwtDynGridLayout\fP (int space=-1)"
.br
.ti -1c
.RI "virtual \fB~QwtDynGridLayout\fP ()"
.br
.ti -1c
.RI "virtual void \fBinvalidate\fP ()"
.br
.ti -1c
.RI "void \fBsetMaxCols\fP (uint maxCols)"
.br
.ti -1c
.RI "uint \fBmaxCols\fP () const"
.br
.ti -1c
.RI "uint \fBnumRows\fP () const"
.br
.ti -1c
.RI "uint \fBnumCols\fP () const"
.br
.ti -1c
.RI "virtual void \fBaddItem\fP (QLayoutItem *)"
.br
.ti -1c
.RI "virtual QLayoutItem * \fBitemAt\fP (int index) const"
.br
.ti -1c
.RI "virtual QLayoutItem * \fBtakeAt\fP (int index)"
.br
.ti -1c
.RI "virtual int \fBcount\fP () const"
.br
.ti -1c
.RI "void \fBsetExpandingDirections\fP (Qt::Orientations)"
.br
.ti -1c
.RI "virtual Qt::Orientations \fBexpandingDirections\fP () const"
.br
.ti -1c
.RI "QList< QRect > \fBlayoutItems\fP (const QRect &, uint numCols) const"
.br
.ti -1c
.RI "virtual int \fBmaxItemWidth\fP () const"
.br
.ti -1c
.RI "virtual void \fBsetGeometry\fP (const QRect &rect)"
.br
.ti -1c
.RI "virtual bool \fBhasHeightForWidth\fP () const"
.br
.ti -1c
.RI "virtual int \fBheightForWidth\fP (int) const "
.br
.ti -1c
.RI "virtual QSize \fBsizeHint\fP () const"
.br
.ti -1c
.RI "virtual bool \fBisEmpty\fP () const"
.br
.ti -1c
.RI "uint \fBitemCount\fP () const"
.br
.ti -1c
.RI "virtual uint \fBcolumnsForWidth\fP (int width) const"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBlayoutGrid\fP (uint numCols, QwtArray< int > &rowHeight, QwtArray< int > &colWidth) const"
.br
.ti -1c
.RI "void \fBstretchGrid\fP (const QRect &rect, uint numCols, QwtArray< int > &rowHeight, QwtArray< int > &colWidth) const"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtDynGridLayout::QwtDynGridLayout (QWidget * parent, int margin = \fC0\fP, int spacing = \fC-1\fP)\fC [explicit]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP Parent widget 
.br
\fImargin\fP Margin 
.br
\fIspacing\fP Spacing 
.RE
.PP

.PP
Definition at line 107 of file qwt_dyngrid_layout.cpp.
.SS "QwtDynGridLayout::QwtDynGridLayout (int spacing = \fC-1\fP)\fC [explicit]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIspacing\fP Spacing 
.RE
.PP

.PP
Definition at line 133 of file qwt_dyngrid_layout.cpp.
.SS "QwtDynGridLayout::~QwtDynGridLayout ()\fC [virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 158 of file qwt_dyngrid_layout.cpp.
.SH "Member Function Documentation"
.PP 
.SS "void QwtDynGridLayout::setMaxCols (uint maxCols)"
.PP
Limit the number of columns. 
.PP
\fBParameters:\fP
.RS 4
\fImaxCols\fP upper limit, 0 means unlimited 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::maxCols()\fP 
.RE
.PP

.PP
Definition at line 194 of file qwt_dyngrid_layout.cpp.
.SS "uint QwtDynGridLayout::maxCols () const"
.PP
Return the upper limit for the number of columns. 0 means unlimited, what is the default. 
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::setMaxCols()\fP 
.RE
.PP

.PP
Definition at line 205 of file qwt_dyngrid_layout.cpp.
.PP
Referenced by columnsForWidth().
.SS "uint QwtDynGridLayout::numRows () const"
.PP
\fBReturns:\fP
.RS 4
Number of rows of the current layout. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::numCols\fP 
.RE
.PP
\fBWarning:\fP
.RS 4
The number of rows might change whenever the geometry changes 
.RE
.PP

.PP
Definition at line 678 of file qwt_dyngrid_layout.cpp.
.PP
Referenced by heightForWidth(), sizeHint(), and stretchGrid().
.SS "uint QwtDynGridLayout::numCols () const"
.PP
\fBReturns:\fP
.RS 4
Number of columns of the current layout. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::numRows\fP 
.RE
.PP
\fBWarning:\fP
.RS 4
The number of columns might change whenever the geometry changes 
.RE
.PP

.PP
Definition at line 688 of file qwt_dyngrid_layout.cpp.
.PP
Referenced by columnsForWidth().
.SS "void QwtDynGridLayout::addItem (QLayoutItem *)\fC [virtual]\fP"
.PP
Adds item to the next free position. 
.PP
Definition at line 212 of file qwt_dyngrid_layout.cpp.
.PP
References invalidate().
.SS "QList< QRect > QwtDynGridLayout::layoutItems (const QRect & rect, uint numCols) const"
.PP
Calculate the geometries of the layout items for a layout with numCols columns and a given rect. 
.PP
\fBParameters:\fP
.RS 4
\fIrect\fP Rect where to place the items 
.br
\fInumCols\fP Number of columns 
.RE
.PP
\fBReturns:\fP
.RS 4
item geometries 
.RE
.PP

.PP
Definition at line 440 of file qwt_dyngrid_layout.cpp.
.PP
References d_data.
.PP
Referenced by QwtPlot::printLegend(), and setGeometry().
.SS "int QwtDynGridLayout::maxItemWidth () const\fC [virtual]\fP"
.PP
\fBReturns:\fP
.RS 4
the maximum width of all layout items 
.RE
.PP

.PP
Definition at line 409 of file qwt_dyngrid_layout.cpp.
.PP
References isEmpty().
.SS "void QwtDynGridLayout::setGeometry (const QRect & rect)\fC [virtual]\fP"
.PP
Reorganizes columns and rows and resizes managed widgets within the rectangle rect. 
.PP
Definition at line 314 of file qwt_dyngrid_layout.cpp.
.PP
References columnsForWidth(), isEmpty(), itemCount(), and layoutItems().
.SS "bool QwtDynGridLayout::hasHeightForWidth () const\fC [virtual]\fP"
.PP
\fBReturns:\fP
.RS 4
true: \fBQwtDynGridLayout\fP implements heightForWidth. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::heightForWidth()\fP 
.RE
.PP

.PP
Definition at line 547 of file qwt_dyngrid_layout.cpp.
.SS "int QwtDynGridLayout::heightForWidth (int width) const\fC [virtual]\fP"
.PP
\fBReturns:\fP
.RS 4
The preferred height for this layout, given the width w. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::hasHeightForWidth()\fP 
.RE
.PP

.PP
Definition at line 557 of file qwt_dyngrid_layout.cpp.
.PP
References columnsForWidth(), isEmpty(), itemCount(), layoutGrid(), and numRows().
.SS "QSize QwtDynGridLayout::sizeHint () const\fC [virtual]\fP"
.PP
Return the size hint. If \fBmaxCols()\fP > 0 it is the size for a grid with \fBmaxCols()\fP columns, otherwise it is the size for a grid with only one row. 
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::maxCols()\fP, \fBQwtDynGridLayout::setMaxCols()\fP 
.RE
.PP

.PP
Definition at line 647 of file qwt_dyngrid_layout.cpp.
.PP
References isEmpty(), itemCount(), layoutGrid(), and numRows().
.SS "bool QwtDynGridLayout::isEmpty () const\fC [virtual]\fP"
.PP
\fBReturns:\fP
.RS 4
true if this layout is empty. 
.RE
.PP

.PP
Definition at line 222 of file qwt_dyngrid_layout.cpp.
.PP
Referenced by columnsForWidth(), heightForWidth(), maxItemWidth(), setGeometry(), sizeHint(), and stretchGrid().
.SS "uint QwtDynGridLayout::itemCount () const"
.PP
\fBReturns:\fP
.RS 4
number of layout items 
.RE
.PP

.PP
Definition at line 231 of file qwt_dyngrid_layout.cpp.
.PP
Referenced by columnsForWidth(), heightForWidth(), setGeometry(), sizeHint(), and stretchGrid().
.SS "uint QwtDynGridLayout::columnsForWidth (int width) const\fC [virtual]\fP"
.PP
Calculate the number of columns for a given width. It tries to use as many columns as possible (limited by \fBmaxCols()\fP)
.PP
\fBParameters:\fP
.RS 4
\fIwidth\fP Available width for all columns 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtDynGridLayout::maxCols()\fP, \fBQwtDynGridLayout::setMaxCols()\fP 
.RE
.PP

.PP
Definition at line 353 of file qwt_dyngrid_layout.cpp.
.PP
References isEmpty(), itemCount(), maxCols(), and numCols().
.PP
Referenced by heightForWidth(), QwtPlot::printLegend(), and setGeometry().
.SS "void QwtDynGridLayout::layoutGrid (uint numCols, QwtArray< int > & rowHeight, QwtArray< int > & colWidth) const\fC [protected]\fP"
.PP
Calculate the dimensions for the columns and rows for a grid of numCols columns. 
.PP
\fBParameters:\fP
.RS 4
\fInumCols\fP Number of columns. 
.br
\fIrowHeight\fP Array where to fill in the calculated row heights. 
.br
\fIcolWidth\fP Array where to fill in the calculated column widths. 
.RE
.PP

.PP
Definition at line 518 of file qwt_dyngrid_layout.cpp.
.PP
Referenced by heightForWidth(), and sizeHint().
.SS "void QwtDynGridLayout::stretchGrid (const QRect & rect, uint numCols, QwtArray< int > & rowHeight, QwtArray< int > & colWidth) const\fC [protected]\fP"
.PP
Stretch columns in case of expanding() & QSizePolicy::Horizontal and rows in case of expanding() & QSizePolicy::Vertical to fill the entire rect. Rows and columns are stretched with the same factor. 
.PP
\fBSee also:\fP
.RS 4
QwtDynGridLayout::setExpanding(), QwtDynGridLayout::expanding() 
.RE
.PP

.PP
Definition at line 586 of file qwt_dyngrid_layout.cpp.
.PP
References expandingDirections(), isEmpty(), itemCount(), and numRows().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
