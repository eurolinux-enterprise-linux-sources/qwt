.TH "QwtScaleDraw" 3 "24 May 2008" "Version 5.1.1" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtScaleDraw \- 
.SH SYNOPSIS
.br
.PP
Inherits \fBQwtAbstractScaleDraw\fP.
.PP
.SH "Detailed Description"
.PP 
A class for drawing scales. 

\fBQwtScaleDraw\fP can be used to draw linear or logarithmic scales. A scale has a position, an alignment and a length, which can be specified . The labels can be rotated and aligned to the ticks using \fBsetLabelRotation()\fP and \fBsetLabelAlignment()\fP.
.PP
After a scale division has been specified as a \fBQwtScaleDiv\fP object using \fBQwtAbstractScaleDraw::setScaleDiv(const QwtScaleDiv &s)\fP, the scale can be drawn with the \fBQwtAbstractScaleDraw::draw()\fP member. 
.PP
Definition at line 30 of file qwt_scale_draw.h.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBAlignment\fP { \fBBottomScale\fP, \fBTopScale\fP, \fBLeftScale\fP, \fBRightScale\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtScaleDraw\fP ()"
.br
.ti -1c
.RI "\fBQwtScaleDraw\fP (const \fBQwtScaleDraw\fP &)"
.br
.ti -1c
.RI "virtual \fB~QwtScaleDraw\fP ()"
.br
.ti -1c
.RI "\fBQwtScaleDraw\fP & \fBoperator=\fP (const \fBQwtScaleDraw\fP &other)"
.br
.ti -1c
.RI "void \fBgetBorderDistHint\fP (const QFont &, int &start, int &end) const"
.br
.ti -1c
.RI "int \fBminLabelDist\fP (const QFont &) const "
.br
.ti -1c
.RI "int \fBminLength\fP (const QPen &, const QFont &) const"
.br
.ti -1c
.RI "virtual int \fBextent\fP (const QPen &, const QFont &) const"
.br
.ti -1c
.RI "void \fBmove\fP (int x, int y)"
.br
.ti -1c
.RI "void \fBmove\fP (const QPoint &)"
.br
.ti -1c
.RI "void \fBsetLength\fP (int length)"
.br
.ti -1c
.RI "\fBAlignment\fP \fBalignment\fP () const"
.br
.ti -1c
.RI "void \fBsetAlignment\fP (\fBAlignment\fP)"
.br
.ti -1c
.RI "Qt::Orientation \fBorientation\fP () const"
.br
.ti -1c
.RI "QPoint \fBpos\fP () const"
.br
.ti -1c
.RI "int \fBlength\fP () const"
.br
.ti -1c
.RI "void \fBsetLabelAlignment\fP (\fBQt::Alignment\fP)"
.br
.ti -1c
.RI "\fBQt::Alignment\fP \fBlabelAlignment\fP () const"
.br
.ti -1c
.RI "void \fBsetLabelRotation\fP (double rotation)"
.br
.ti -1c
.RI "double \fBlabelRotation\fP () const"
.br
.ti -1c
.RI "int \fBmaxLabelHeight\fP (const QFont &) const "
.br
.ti -1c
.RI "int \fBmaxLabelWidth\fP (const QFont &) const "
.br
.ti -1c
.RI "QPoint \fBlabelPosition\fP (double val) const"
.br
.ti -1c
.RI "QRect \fBlabelRect\fP (const QFont &, double val) const"
.br
.ti -1c
.RI "QSize \fBlabelSize\fP (const QFont &, double val) const"
.br
.ti -1c
.RI "QRect \fBboundingLabelRect\fP (const QFont &, double val) const"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "QMatrix \fBlabelMatrix\fP (const QPoint &, const QSize &) const "
.br
.ti -1c
.RI "virtual void \fBdrawTick\fP (QPainter *p, double val, int len) const"
.br
.ti -1c
.RI "virtual void \fBdrawBackbone\fP (QPainter *p) const "
.br
.ti -1c
.RI "virtual void \fBdrawLabel\fP (QPainter *p, double val) const"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtScaleDraw::Alignment\fP"
.PP
Alignment of the scale draw 
.PP
\fBSee also:\fP
.RS 4
\fBsetAlignment()\fP, \fBalignment()\fP 
.RE
.PP

.PP
Definition at line 37 of file qwt_scale_draw.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtScaleDraw::QwtScaleDraw ()"
.PP
Constructor. 
.PP
The range of the scale is initialized to [0, 100], The position is at (0, 0) with a length of 100. The orientation is QwtAbstractScaleDraw::Bottom. 
.PP
Definition at line 60 of file qwt_scale_draw.cpp.
.PP
References setLength().
.SS "QwtScaleDraw::QwtScaleDraw (const \fBQwtScaleDraw\fP &)"
.PP
Copy constructor. 
.PP
Definition at line 67 of file qwt_scale_draw.cpp.
.PP
References d_data.
.SS "QwtScaleDraw::~QwtScaleDraw ()\fC [virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 74 of file qwt_scale_draw.cpp.
.SH "Member Function Documentation"
.PP 
.SS "\fBQwtScaleDraw\fP & QwtScaleDraw::operator= (const \fBQwtScaleDraw\fP & other)"
.PP
Assignment operator. 
.PP
Definition at line 80 of file qwt_scale_draw.cpp.
.PP
References d_data.
.SS "void QwtScaleDraw::getBorderDistHint (const QFont & font, int & start, int & end) const"
.PP
Determine the minimum border distance. 
.PP
This member function returns the minimum space needed to draw the mark labels at the scale's endpoints.
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Font 
.br
\fIstart\fP Start border distance 
.br
\fIend\fP End border distance 
.RE
.PP

.PP
Definition at line 139 of file qwt_scale_draw.cpp.
.PP
References QwtAbstractScaleDraw::hasComponent(), labelRect(), QwtAbstractScaleDraw::map(), orientation(), QwtAbstractScaleDraw::scaleDiv(), and QwtScaleDiv::ticks().
.PP
Referenced by QwtSlider::layoutSlider(), QwtThermo::layoutThermo(), QwtSlider::minimumSizeHint(), and minLength().
.SS "int QwtScaleDraw::minLabelDist (const QFont & font) const"
.PP
Determine the minimum distance between two labels, that is necessary that the texts don't overlap.
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Font 
.RE
.PP
\fBReturns:\fP
.RS 4
The maximum width of a label
.RE
.PP
\fBSee also:\fP
.RS 4
\fBgetBorderDistHint()\fP 
.RE
.PP

.PP
Definition at line 192 of file qwt_scale_draw.cpp.
.PP
References QwtAbstractScaleDraw::hasComponent(), labelRect(), labelRotation(), orientation(), QwtAbstractScaleDraw::scaleDiv(), and QwtScaleDiv::ticks().
.PP
Referenced by minLength().
.SS "int QwtScaleDraw::minLength (const QPen & pen, const QFont & font) const"
.PP
Calculate the minimum length that is needed to draw the scale
.PP
\fBParameters:\fP
.RS 4
\fIpen\fP Pen that is used for painting backbone and ticks 
.br
\fIfont\fP Font used for painting the labels
.RE
.PP
\fBSee also:\fP
.RS 4
\fBextent()\fP 
.RE
.PP

.PP
Definition at line 318 of file qwt_scale_draw.cpp.
.PP
References getBorderDistHint(), QwtAbstractScaleDraw::hasComponent(), minLabelDist(), QwtAbstractScaleDraw::scaleDiv(), and QwtScaleDiv::ticks().
.PP
Referenced by QwtThermo::minimumSizeHint(), and QwtSlider::minimumSizeHint().
.SS "int QwtScaleDraw::extent (const QPen & pen, const QFont & font) const\fC [virtual]\fP"
.PP
Calculate the width/height that is needed for a vertical/horizontal scale.
.PP
The extent is calculated from the pen width of the backbone, the major tick length, the spacing and the maximum width/height of the labels.
.PP
\fBParameters:\fP
.RS 4
\fIpen\fP Pen that is used for painting backbone and ticks 
.br
\fIfont\fP Font used for painting the labels
.RE
.PP
\fBSee also:\fP
.RS 4
\fBminLength()\fP 
.RE
.PP

.PP
Implements \fBQwtAbstractScaleDraw\fP.
.PP
Definition at line 280 of file qwt_scale_draw.cpp.
.PP
References QwtAbstractScaleDraw::hasComponent(), QwtAbstractScaleDraw::majTickLength(), maxLabelHeight(), maxLabelWidth(), QwtAbstractScaleDraw::minimumExtent(), orientation(), and QwtAbstractScaleDraw::spacing().
.PP
Referenced by QwtThermo::minimumSizeHint(), and QwtSlider::minimumSizeHint().
.SS "void QwtScaleDraw::move (const QPoint & pos)"
.PP
Move the position of the scale. 
.PP
The meaning of the parameter pos depends on the alignment: 
.IP "\fBQwtScaleDraw::LeftScale \fP" 1c
The origin is the topmost point of the backbone. The backbone is a vertical line. Scale marks and labels are drawn at the left of the backbone. 
.IP "\fBQwtScaleDraw::RightScale \fP" 1c
The origin is the topmost point of the backbone. The backbone is a vertical line. Scale marks and labels are drawn at the right of the backbone. 
.IP "\fBQwtScaleDraw::TopScale \fP" 1c
The origin is the leftmost point of the backbone. The backbone is a horizontal line. Scale marks and labels are drawn above the backbone. 
.IP "\fBQwtScaleDraw::BottomScale \fP" 1c
The origin is the leftmost point of the backbone. The backbone is a horizontal line Scale marks and labels are drawn below the backbone. 
.PP
.PP
\fBParameters:\fP
.RS 4
\fIpos\fP Origin of the scale
.RE
.PP
\fBSee also:\fP
.RS 4
\fBpos()\fP, \fBsetLength()\fP 
.RE
.PP

.PP
Definition at line 566 of file qwt_scale_draw.cpp.
.SS "void QwtScaleDraw::setLength (int length)"
.PP
Set the length of the backbone.
.PP
The length doesn't include the space needed for overlapping labels.
.PP
\fBSee also:\fP
.RS 4
\fBmove()\fP, \fBminLabelDist()\fP 
.RE
.PP

.PP
Definition at line 589 of file qwt_scale_draw.cpp.
.PP
Referenced by QwtPlotScaleItem::draw(), QwtSlider::layoutSlider(), QwtThermo::layoutThermo(), QwtPlot::printScale(), and QwtScaleDraw().
.SS "\fBQwtScaleDraw::Alignment\fP QwtScaleDraw::alignment () const"
.PP
Return alignment of the scale 
.PP
\fBSee also:\fP
.RS 4
\fBsetAlignment()\fP 
.RE
.PP

.PP
Definition at line 91 of file qwt_scale_draw.cpp.
.PP
Referenced by QwtScaleWidget::alignment(), QwtPlotScaleItem::draw(), drawBackbone(), drawTick(), labelMatrix(), labelPosition(), QwtPlotScaleItem::setAlignment(), and QwtSlider::setScaleDraw().
.SS "void QwtScaleDraw::setAlignment (\fBAlignment\fP align)"
.PP
Set the alignment of the scale
.PP
The default alignment is QwtScaleDraw::BottomScale 
.PP
\fBSee also:\fP
.RS 4
\fBalignment()\fP 
.RE
.PP

.PP
Definition at line 102 of file qwt_scale_draw.cpp.
.PP
Referenced by QwtThermo::layoutThermo(), QwtPlotScaleItem::setAlignment(), QwtSlider::setScaleDraw(), QwtScaleWidget::setScaleDraw(), and QwtSlider::setScalePosition().
.SS "Qt::Orientation QwtScaleDraw::orientation () const"
.PP
Return the orientation
.PP
TopScale, BottomScale are horizontal (Qt::Horizontal) scales, LeftScale, RightScale are vertical (Qt::Vertical) scales.
.PP
\fBSee also:\fP
.RS 4
\fBalignment()\fP 
.RE
.PP

.PP
Definition at line 115 of file qwt_scale_draw.cpp.
.PP
Referenced by QwtPlotScaleItem::draw(), QwtScaleWidget::drawColorBar(), drawTick(), extent(), getBorderDistHint(), minLabelDist(), QwtPlot::printScale(), and QwtPlotScaleItem::updateScaleDiv().
.SS "QPoint QwtScaleDraw::pos () const"
.PP
\fBReturns:\fP
.RS 4
Origin of the scale 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBmove()\fP, \fBlength()\fP 
.RE
.PP

.PP
Definition at line 576 of file qwt_scale_draw.cpp.
.PP
Referenced by boundingLabelRect(), drawBackbone(), drawLabel(), drawTick(), labelRect(), and QwtPlot::printScale().
.SS "int QwtScaleDraw::length () const"
.PP
\fBReturns:\fP
.RS 4
the length of the backbone 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetLength()\fP, \fBpos()\fP 
.RE
.PP

.PP
Definition at line 604 of file qwt_scale_draw.cpp.
.PP
Referenced by QwtPlot::printScale().
.SS "void QwtScaleDraw::setLabelAlignment (\fBQt::Alignment\fP alignment)"
.PP
Change the label flags. 
.PP
Labels are aligned to the point ticklength + spacing away from the backbone.
.PP
The alignment is relative to the orientation of the label text. In case of an flags of 0 the label will be aligned depending on the orientation of the scale:
.PP
QwtScaleDraw::TopScale: Qt::AlignHCenter | Qt::AlignTop
.br
 QwtScaleDraw::BottomScale: Qt::AlignHCenter | Qt::AlignBottom
.br
 QwtScaleDraw::LeftScale: Qt::AlignLeft | Qt::AlignVCenter
.br
 QwtScaleDraw::RightScale: Qt::AlignRight | Qt::AlignVCenter
.br
.PP
Changing the alignment is often necessary for rotated labels.
.PP
\fBParameters:\fP
.RS 4
\fIalignment\fP Or'd Qt::AlignmentFlags <see qnamespace.h>
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetLabelRotation()\fP, \fBlabelRotation()\fP, \fBlabelAlignment()\fP 
.RE
.PP
\fBWarning:\fP
.RS 4
The various alignments might be confusing. The alignment of the label is not the alignment of the scale and is not the alignment of the flags (QwtText::flags()) returned from \fBQwtAbstractScaleDraw::label()\fP. 
.RE
.PP

.PP
Definition at line 851 of file qwt_scale_draw.cpp.
.SS "\fBQt::Alignment\fP QwtScaleDraw::labelAlignment () const"
.PP
\fBReturns:\fP
.RS 4
the label flags 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetLabelAlignment()\fP, \fBlabelRotation()\fP 
.RE
.PP

.PP
Definition at line 864 of file qwt_scale_draw.cpp.
.PP
Referenced by labelMatrix().
.SS "void QwtScaleDraw::setLabelRotation (double rotation)"
.PP
Rotate all labels.
.PP
When changing the rotation, it might be necessary to adjust the label flags too. Finding a useful combination is often the result of try and error.
.PP
\fBParameters:\fP
.RS 4
\fIrotation\fP Angle in degrees. When changing the label rotation, the label flags often needs to be adjusted too.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetLabelAlignment()\fP, \fBlabelRotation()\fP, \fBlabelAlignment()\fP. 
.RE
.PP

.PP
Definition at line 809 of file qwt_scale_draw.cpp.
.SS "double QwtScaleDraw::labelRotation () const"
.PP
\fBReturns:\fP
.RS 4
the label rotation 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetLabelRotation()\fP, \fBlabelAlignment()\fP 
.RE
.PP

.PP
Definition at line 818 of file qwt_scale_draw.cpp.
.PP
Referenced by labelMatrix(), and minLabelDist().
.SS "int QwtScaleDraw::maxLabelHeight (const QFont & font) const"
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Font 
.RE
.PP
\fBReturns:\fP
.RS 4
the maximum height of a label 
.RE
.PP

.PP
Definition at line 897 of file qwt_scale_draw.cpp.
.PP
References labelSize(), QwtAbstractScaleDraw::scaleDiv(), and QwtScaleDiv::ticks().
.PP
Referenced by extent().
.SS "int QwtScaleDraw::maxLabelWidth (const QFont & font) const"
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Font 
.RE
.PP
\fBReturns:\fP
.RS 4
the maximum width of a label 
.RE
.PP

.PP
Definition at line 874 of file qwt_scale_draw.cpp.
.PP
References labelSize(), QwtAbstractScaleDraw::scaleDiv(), and QwtScaleDiv::ticks().
.PP
Referenced by extent().
.SS "QPoint QwtScaleDraw::labelPosition (double value) const"
.PP
Find the position, where to paint a label
.PP
The position has a distance of \fBmajTickLength()\fP + \fBspacing()\fP + 1 from the backbone. The direction depends on the \fBalignment()\fP
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP Value 
.RE
.PP

.PP
Definition at line 356 of file qwt_scale_draw.cpp.
.PP
References alignment(), QwtAbstractScaleDraw::hasComponent(), QwtAbstractScaleDraw::majTickLength(), QwtAbstractScaleDraw::map(), QwtAbstractScaleDraw::spacing(), and QwtScaleMap::transform().
.PP
Referenced by boundingLabelRect(), drawLabel(), and labelRect().
.SS "QRect QwtScaleDraw::labelRect (const QFont & font, double value) const"
.PP
Find the bounding rect for the label. The coordinates of the rect are relative to spacing + ticklength from the backbone in direction of the tick.
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Font used for painting 
.br
\fIvalue\fP Value 
.RE
.PP

.PP
Definition at line 747 of file qwt_scale_draw.cpp.
.PP
References QwtText::isEmpty(), labelMatrix(), labelPosition(), labelSize(), pos(), QwtText::textSize(), QwtAbstractScaleDraw::tickLabel(), and QwtMetricsMap::translate().
.PP
Referenced by getBorderDistHint(), labelSize(), and minLabelDist().
.SS "QSize QwtScaleDraw::labelSize (const QFont & font, double value) const"
.PP
Calculate the size that is needed to draw a label
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Label font 
.br
\fIvalue\fP Value 
.RE
.PP

.PP
Definition at line 791 of file qwt_scale_draw.cpp.
.PP
References labelRect().
.PP
Referenced by boundingLabelRect(), drawLabel(), labelRect(), maxLabelHeight(), and maxLabelWidth().
.SS "QRect QwtScaleDraw::boundingLabelRect (const QFont & font, double value) const"
.PP
Find the bounding rect for the label. The coordinates of the rect are absolute coordinates ( calculated from \fBpos()\fP ). in direction of the tick.
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP Font used for painting 
.br
\fIvalue\fP Value
.RE
.PP
\fBSee also:\fP
.RS 4
\fBlabelRect()\fP 
.RE
.PP

.PP
Definition at line 652 of file qwt_scale_draw.cpp.
.PP
References QwtText::isEmpty(), labelMatrix(), labelPosition(), labelSize(), pos(), QwtText::textSize(), and QwtAbstractScaleDraw::tickLabel().
.SS "QMatrix QwtScaleDraw::labelMatrix (const QPoint & pos, const QSize & size) const\fC [protected]\fP"
.PP
Calculate the matrix that is needed to paint a label depending on its alignment and rotation.
.PP
\fBParameters:\fP
.RS 4
\fIpos\fP Position where to paint the label 
.br
\fIsize\fP Size of the label
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetLabelAlignment()\fP, \fBsetLabelRotation()\fP 
.RE
.PP

.PP
Definition at line 676 of file qwt_scale_draw.cpp.
.PP
References alignment(), labelAlignment(), and labelRotation().
.PP
Referenced by boundingLabelRect(), drawLabel(), and labelRect().
.SS "void QwtScaleDraw::drawTick (QPainter * painter, double value, int len) const\fC [protected, virtual]\fP"
.PP
Draw a tick
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIvalue\fP Value of the tick 
.br
\fIlen\fP Lenght of the tick
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdrawBackbone()\fP, \fBdrawLabel()\fP 
.RE
.PP

.PP
Implements \fBQwtAbstractScaleDraw\fP.
.PP
Definition at line 406 of file qwt_scale_draw.cpp.
.PP
References alignment(), QwtPainter::drawLine(), QwtMetricsMap::isIdentity(), QwtMetricsMap::layoutToDevice(), QwtMetricsMap::layoutToDeviceX(), QwtMetricsMap::layoutToDeviceY(), QwtAbstractScaleDraw::map(), QwtPainter::metricsMap(), orientation(), pos(), QwtPainter::resetMetricsMap(), QwtAbstractScaleDraw::scaleMap(), and QwtPainter::setMetricsMap().
.SS "void QwtScaleDraw::drawBackbone (QPainter * painter) const\fC [protected, virtual]\fP"
.PP
Draws the baseline of the scale 
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdrawTick()\fP, \fBdrawLabel()\fP 
.RE
.PP

.PP
Implements \fBQwtAbstractScaleDraw\fP.
.PP
Definition at line 507 of file qwt_scale_draw.cpp.
.PP
References alignment(), QwtPainter::drawLine(), and pos().
.SS "void QwtScaleDraw::drawLabel (QPainter * painter, double value) const\fC [protected, virtual]\fP"
.PP
Draws the label for a major scale tick
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIvalue\fP Value
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdrawTick()\fP, \fBdrawBackbone()\fP, \fBboundingLabelRect()\fP 
.RE
.PP

.PP
Implements \fBQwtAbstractScaleDraw\fP.
.PP
Definition at line 617 of file qwt_scale_draw.cpp.
.PP
References QwtText::draw(), QwtText::isEmpty(), labelMatrix(), labelPosition(), labelSize(), pos(), QwtText::textSize(), and QwtAbstractScaleDraw::tickLabel().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
