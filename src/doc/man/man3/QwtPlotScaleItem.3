.TH "QwtPlotScaleItem" 3 "24 May 2008" "Version 5.1.1" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtPlotScaleItem \- 
.SH SYNOPSIS
.br
.PP
Inherits \fBQwtPlotItem\fP.
.PP
.SH "Detailed Description"
.PP 
A class which draws a scale inside the plot canvas. 

\fBQwtPlotScaleItem\fP can be used to draw an axis inside the plot canvas. It might by synchronized to one of the axis of the plot, but can also display its own ticks and labels.
.PP
It is allowed to synchronize the scale item with a disabled axis. In plots with vertical and horizontal scale items, it might be necessary to remove ticks at the intersections, by overloading \fBupdateScaleDiv()\fP.
.PP
The scale might be at a specific position (f.e 0.0) or it might be aligned to a canvas border.
.PP
\fBExample\fP.RS 4
The following example shows how to replace the left axis, by a scale item at the x position 0.0. 
.PP
.nf

QwtPlotScaleItem *scaleItem = 
    new QwtPlotScaleItem(QwtScaleDraw::RightScale, 0.0);
scaleItem->setFont(plot->axisWidget(QwtPlot::yLeft)->font());
scaleItem->attach(plot);

plot->enableAxis(QwtPlot::yLeft, false);

.fi
.PP
 
.RE
.PP

.PP
Definition at line 51 of file qwt_plot_scaleitem.h.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtPlotScaleItem\fP (\fBQwtScaleDraw::Alignment\fP=QwtScaleDraw::BottomScale, const double pos=0.0)"
.br
.ti -1c
.RI "virtual \fB~QwtPlotScaleItem\fP ()"
.br
.ti -1c
.RI "virtual int \fBrtti\fP () const"
.br
.ti -1c
.RI "void \fBsetScaleDiv\fP (const \fBQwtScaleDiv\fP &)"
.br
.ti -1c
.RI "const \fBQwtScaleDiv\fP & \fBscaleDiv\fP () const"
.br
.ti -1c
.RI "void \fBsetScaleDivFromAxis\fP (bool on)"
.br
.ti -1c
.RI "bool \fBisScaleDivFromAxis\fP () const"
.br
.ti -1c
.RI "void \fBsetPalette\fP (const QPalette &)"
.br
.ti -1c
.RI "QPalette \fBpalette\fP () const"
.br
.ti -1c
.RI "void \fBsetFont\fP (const QFont &)"
.br
.ti -1c
.RI "QFont \fBfont\fP () const"
.br
.ti -1c
.RI "void \fBsetScaleDraw\fP (\fBQwtScaleDraw\fP *)"
.br
.ti -1c
.RI "const \fBQwtScaleDraw\fP * \fBscaleDraw\fP () const"
.br
.ti -1c
.RI "\fBQwtScaleDraw\fP * \fBscaleDraw\fP ()"
.br
.ti -1c
.RI "void \fBsetPosition\fP (double pos)"
.br
.ti -1c
.RI "double \fBposition\fP () const"
.br
.ti -1c
.RI "void \fBsetBorderDistance\fP (int numPixels)"
.br
.ti -1c
.RI "int \fBborderDistance\fP () const"
.br
.ti -1c
.RI "void \fBsetAlignment\fP (\fBQwtScaleDraw::Alignment\fP)"
.br
.ti -1c
.RI "virtual void \fBdraw\fP (QPainter *p, const \fBQwtScaleMap\fP &xMap, const \fBQwtScaleMap\fP &yMap, const QRect &rect) const"
.br
.ti -1c
.RI "virtual void \fBupdateScaleDiv\fP (const \fBQwtScaleDiv\fP &, const \fBQwtScaleDiv\fP &)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtPlotScaleItem::QwtPlotScaleItem (\fBQwtScaleDraw::Alignment\fP alignment = \fCQwtScaleDraw::BottomScale\fP, const double pos = \fC0.0\fP)\fC [explicit]\fP"
.PP
Constructor for scale item at the position pos. 
.PP
\fBParameters:\fP
.RS 4
\fIalignment\fP In case of QwtScaleDraw::BottomScale/QwtScaleDrawTopScale the scale item is corresponding to the \fBxAxis()\fP, otherwise it corresponds to the \fByAxis()\fP.
.br
\fIposition\fP x or y position, depending on the corresponding axis.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetPosition()\fP, \fBsetAlignment()\fP 
.RE
.PP

.PP
Definition at line 58 of file qwt_plot_scaleitem.cpp.
.PP
References QwtPlotItem::setZ().
.SS "QwtPlotScaleItem::~QwtPlotScaleItem ()\fC [virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 70 of file qwt_plot_scaleitem.cpp.
.SH "Member Function Documentation"
.PP 
.SS "int QwtPlotScaleItem::rtti () const\fC [virtual]\fP"
.PP
\fBReturns:\fP
.RS 4
QwtPlotItem::Rtti_PlotScale 
.RE
.PP

.PP
Reimplemented from \fBQwtPlotItem\fP.
.PP
Definition at line 76 of file qwt_plot_scaleitem.cpp.
.SS "void QwtPlotScaleItem::setScaleDiv (const \fBQwtScaleDiv\fP & scaleDiv)"
.PP
Assign a scale division. 
.PP
When assigning a scaleDiv the scale division won't be synchronized with the corresponding axis anymore.
.PP
\fBParameters:\fP
.RS 4
\fIscaleDiv\fP Scale division 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBscaleDiv()\fP, \fBsetScaleDivFromAxis()\fP, \fBisScaleDivFromAxis()\fP 
.RE
.PP

.PP
Definition at line 90 of file qwt_plot_scaleitem.cpp.
.PP
References scaleDiv().
.SS "const \fBQwtScaleDiv\fP & QwtPlotScaleItem::scaleDiv () const"
.PP
\fBReturns:\fP
.RS 4
Scale division 
.RE
.PP

.PP
Definition at line 97 of file qwt_plot_scaleitem.cpp.
.PP
Referenced by setScaleDiv().
.SS "void QwtPlotScaleItem::setScaleDivFromAxis (bool on)"
.PP
Enable/Disable the synchronization of the scale division with the corresponding axis.
.PP
\fBSee also:\fP
.RS 4
\fBisScaleDivFromAxis()\fP 
.RE
.PP

.PP
Definition at line 108 of file qwt_plot_scaleitem.cpp.
.PP
References QwtPlot::axisScaleDiv(), QwtPlotItem::itemChanged(), QwtPlotItem::plot(), updateScaleDiv(), QwtPlotItem::xAxis(), and QwtPlotItem::yAxis().
.SS "bool QwtPlotScaleItem::isScaleDivFromAxis () const"
.PP
\fBReturns:\fP
.RS 4
True, if the synchronization of the scale division with the corresponding axis is enabled. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetScaleDiv()\fP, \fBsetScaleDivFromAxis()\fP 
.RE
.PP

.PP
Definition at line 131 of file qwt_plot_scaleitem.cpp.
.SS "void QwtPlotScaleItem::setPalette (const QPalette & palette)"
.PP
Set the palette 
.PP
\fBSee also:\fP
.RS 4
\fBQwtAbstractScaleDraw::draw()\fP, \fBpalette()\fP 
.RE
.PP

.PP
Definition at line 166 of file qwt_plot_scaleitem.cpp.
.PP
References QwtPlotItem::itemChanged().
.SS "QPalette QwtPlotScaleItem::palette () const"
.PP
\fBReturns:\fP
.RS 4
palette 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetPalette()\fP 
.RE
.PP

.PP
Definition at line 179 of file qwt_plot_scaleitem.cpp.
.SS "void QwtPlotScaleItem::setFont (const QFont & font)"
.PP
Change the tick label font 
.PP
\fBSee also:\fP
.RS 4
\fBfont\fP 
.RE
.PP

.PP
Definition at line 190 of file qwt_plot_scaleitem.cpp.
.PP
References QwtPlotItem::itemChanged().
.SS "QFont QwtPlotScaleItem::font () const"
.PP
\fBReturns:\fP
.RS 4
tick label font 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetFont()\fP 
.RE
.PP

.PP
Definition at line 203 of file qwt_plot_scaleitem.cpp.
.SS "void QwtPlotScaleItem::setScaleDraw (\fBQwtScaleDraw\fP * scaleDraw)"
.PP
Set a scale draw. 
.PP
\fBParameters:\fP
.RS 4
\fIaxisId\fP axis index 
.br
\fIscaleDraw\fP object responsible for drawing scales.
.RE
.PP
The main use case for replacing the default \fBQwtScaleDraw\fP is to overload \fBQwtAbstractScaleDraw::label\fP, to replace or swallow tick labels.
.PP
\fBSee also:\fP
.RS 4
\fBscaleDraw()\fP 
.RE
.PP

.PP
Definition at line 220 of file qwt_plot_scaleitem.cpp.
.PP
References QwtPlot::axisScaleDiv(), QwtPlotItem::itemChanged(), QwtPlotItem::plot(), scaleDraw(), updateScaleDiv(), QwtPlotItem::xAxis(), and QwtPlotItem::yAxis().
.SS "const \fBQwtScaleDraw\fP * QwtPlotScaleItem::scaleDraw () const"
.PP
\fBReturns:\fP
.RS 4
Scale draw 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetScaleDraw()\fP 
.RE
.PP

.PP
Definition at line 244 of file qwt_plot_scaleitem.cpp.
.PP
Referenced by setScaleDraw().
.SS "\fBQwtScaleDraw\fP * QwtPlotScaleItem::scaleDraw ()"
.PP
\fBReturns:\fP
.RS 4
Scale draw 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetScaleDraw()\fP 
.RE
.PP

.PP
Definition at line 253 of file qwt_plot_scaleitem.cpp.
.SS "void QwtPlotScaleItem::setPosition (double pos)"
.PP
Change the position of the scale
.PP
The position is interpreted as y value for horizontal axes and as x value for vertical axes.
.PP
The border distance is set to -1.
.PP
\fBSee also:\fP
.RS 4
\fBposition()\fP, \fBsetAlignment()\fP 
.RE
.PP

.PP
Definition at line 268 of file qwt_plot_scaleitem.cpp.
.PP
References QwtPlotItem::itemChanged().
.SS "double QwtPlotScaleItem::position () const"
.PP
\fBReturns:\fP
.RS 4
Position of the scale 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetPosition()\fP, \fBsetAlignment()\fP 
.RE
.PP

.PP
Definition at line 282 of file qwt_plot_scaleitem.cpp.
.SS "void QwtPlotScaleItem::setBorderDistance (int distance)"
.PP
Align the scale to the canvas. 
.PP
If distance is >= 0 the scale will be aligned to a border of the contents rect of the canvas. If alignment() is QwtScaleDraw::LeftScale, the scale will be aligned to the right border, if it is QwtScaleDraw::TopScale it will be aligned to the bottom (and vice versa),
.PP
If distance is < 0 the scale will be at the \fBposition()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIdistance\fP Number of pixels between the canvas border and the backbone of the scale.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetPosition()\fP, \fBborderDistance()\fP 
.RE
.PP

.PP
Definition at line 303 of file qwt_plot_scaleitem.cpp.
.PP
References QwtPlotItem::itemChanged().
.SS "int QwtPlotScaleItem::borderDistance () const"
.PP
\fBReturns:\fP
.RS 4
Distance from a canvas border 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetBorderDistance()\fP, \fBsetPosition()\fP 
.RE
.PP

.PP
Definition at line 319 of file qwt_plot_scaleitem.cpp.
.SS "void QwtPlotScaleItem::setAlignment (\fBQwtScaleDraw::Alignment\fP alignment)"
.PP
Change the alignment of the scale
.PP
The alignment sets the orientation of the scale and the position of the ticks:
.PP
.IP "\(bu" 2
QwtScaleDraw::BottomScale: horizontal, ticks below
.IP "\(bu" 2
QwtScaleDraw::TopScale: horizontal, ticks above
.IP "\(bu" 2
QwtScaleDraw::LeftScale: vertical, ticks left
.IP "\(bu" 2
QwtScaleDraw::RightScale: vertical, ticks right
.PP
.PP
For horizontal scales the position corresponds to \fBQwtPlotItem::yAxis()\fP, otherwise to \fBQwtPlotItem::xAxis()\fP.
.PP
\fBSee also:\fP
.RS 4
\fBscaleDraw()\fP, \fBQwtScaleDraw::alignment()\fP, \fBsetPosition()\fP 
.RE
.PP

.PP
Definition at line 340 of file qwt_plot_scaleitem.cpp.
.PP
References QwtScaleDraw::alignment(), QwtPlotItem::itemChanged(), and QwtScaleDraw::setAlignment().
.SS "void QwtPlotScaleItem::draw (QPainter * p, const \fBQwtScaleMap\fP & xMap, const \fBQwtScaleMap\fP & yMap, const QRect & rect) const\fC [virtual]\fP"
.PP
Draw the scale. 
.PP
Implements \fBQwtPlotItem\fP.
.PP
Definition at line 353 of file qwt_plot_scaleitem.cpp.
.PP
References QwtScaleDraw::alignment(), QwtScaleTransformation::copy(), QwtAbstractScaleDraw::draw(), QwtScaleDraw::move(), QwtScaleDraw::orientation(), QwtScaleDraw::setLength(), QwtAbstractScaleDraw::setTransformation(), QwtScaleMap::transform(), QwtScaleMap::transformation(), and updateBorders().
.SS "void QwtPlotScaleItem::updateScaleDiv (const \fBQwtScaleDiv\fP & xScaleDiv, const \fBQwtScaleDiv\fP & yScaleDiv)\fC [virtual]\fP"
.PP
Update the item to changes of the axes scale division. 
.PP
In case of \fBisScaleDivFromAxis()\fP, the scale draw is synchronized to the correspond axis.
.PP
\fBParameters:\fP
.RS 4
\fIxScaleDiv\fP Scale division of the x-axis 
.br
\fIyScaleDiv\fP Scale division of the y-axis
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtPlot::updateAxes()\fP 
.RE
.PP

.PP
Reimplemented from \fBQwtPlotItem\fP.
.PP
Definition at line 443 of file qwt_plot_scaleitem.cpp.
.PP
References QwtScaleDraw::orientation(), and QwtAbstractScaleDraw::setScaleDiv().
.PP
Referenced by setScaleDivFromAxis(), and setScaleDraw().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
