.TH "QwtAnalogClock" 3 "24 May 2008" "Version 5.1.1" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtAnalogClock \- 
.SH SYNOPSIS
.br
.PP
Inherits \fBQwtDial\fP.
.PP
.SH "Detailed Description"
.PP 
An analog clock. 

.PP
\fBExample\fP.RS 4

.PP
.nf
#include <qwt_analog_clock.h>

  QwtAnalogClock *clock = new QwtAnalogClock(...);
  clock->scaleDraw()->setPenWidth(3);
  clock->setLineWidth(6);
  clock->setFrameShadow(QwtDial::Sunken);
  clock->setTime();

  // update the clock every second
  QTimer *timer = new QTimer(clock);
  timer->connect(timer, SIGNAL(timeout()), clock, SLOT(setCurrentTime()));
  timer->start(1000);

  
.fi
.PP
.RE
.PP
Qwt is missing a set of good looking hands. Contributions are very welcome.
.PP
\fBNote:\fP
.RS 4
The examples/dials example shows how to use \fBQwtAnalogClock\fP. 
.RE
.PP

.PP
Definition at line 45 of file qwt_analog_clock.h.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBHand\fP { \fBSecondHand\fP, \fBMinuteHand\fP, \fBHourHand\fP, \fBNHands\fP }"
.br
.in -1c
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBsetCurrentTime\fP ()"
.br
.ti -1c
.RI "void \fBsetTime\fP (const QTime &=QTime::currentTime())"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtAnalogClock\fP (QWidget *parent=NULL)"
.br
.ti -1c
.RI "virtual \fB~QwtAnalogClock\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetHand\fP (\fBHand\fP, \fBQwtDialNeedle\fP *)"
.br
.ti -1c
.RI "const \fBQwtDialNeedle\fP * \fBhand\fP (\fBHand\fP) const"
.br
.ti -1c
.RI "\fBQwtDialNeedle\fP * \fBhand\fP (\fBHand\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBQwtText\fP \fBscaleLabel\fP (double) const"
.br
.ti -1c
.RI "virtual void \fBdrawNeedle\fP (QPainter *, const QPoint &, int radius, double direction, QPalette::ColorGroup) const"
.br
.ti -1c
.RI "virtual void \fBdrawHand\fP (QPainter *, \fBHand\fP, const QPoint &, int radius, double direction, QPalette::ColorGroup) const "
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtAnalogClock::Hand\fP"
.PP
Hand type 
.PP
\fBSee also:\fP
.RS 4
\fBsetHand()\fP, \fBhand()\fP 
.RE
.PP

.PP
Definition at line 55 of file qwt_analog_clock.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtAnalogClock::QwtAnalogClock (QWidget * parent = \fCNULL\fP)\fC [explicit]\fP"
.PP
Constructor 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP Parent widget 
.RE
.PP

.PP
Definition at line 16 of file qwt_analog_clock.cpp.
.SS "QwtAnalogClock::~QwtAnalogClock ()\fC [virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 82 of file qwt_analog_clock.cpp.
.SH "Member Function Documentation"
.PP 
.SS "void QwtAnalogClock::setHand (\fBHand\fP hand, \fBQwtDialNeedle\fP * needle)\fC [virtual]\fP"
.PP
Set a clockhand 
.PP
\fBParameters:\fP
.RS 4
\fIhand\fP Specifies the type of hand 
.br
\fIneedle\fP Hand 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtAnalogClock::hand()\fP 
.RE
.PP

.PP
Definition at line 104 of file qwt_analog_clock.cpp.
.PP
References QwtDial::needle().
.SS "const \fBQwtDialNeedle\fP * QwtAnalogClock::hand (\fBHand\fP hd) const"
.PP
\fBReturns:\fP
.RS 4
Clock hand 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIhd\fP Specifies the type of hand 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtAnalogClock::setHand\fP 
.RE
.PP

.PP
Definition at line 131 of file qwt_analog_clock.cpp.
.PP
Referenced by drawHand().
.SS "\fBQwtDialNeedle\fP * QwtAnalogClock::hand (\fBHand\fP hd)"
.PP
\fBReturns:\fP
.RS 4
Clock hand 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIhd\fP Specifies the type of hand 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtAnalogClock::setHand\fP 
.RE
.PP

.PP
Definition at line 118 of file qwt_analog_clock.cpp.
.SS "void QwtAnalogClock::setCurrentTime ()\fC [slot]\fP"
.PP
Set the current time. 
.PP
This is the same as \fBQwtAnalogClock::setTime()\fP, but Qt < 3.0 can't handle default parameters for slots. 
.PP
Definition at line 142 of file qwt_analog_clock.cpp.
.PP
References setTime().
.SS "void QwtAnalogClock::setTime (const QTime & time = \fCQTime::currentTime()\fP)\fC [slot]\fP"
.PP
Set a time 
.PP
\fBParameters:\fP
.RS 4
\fItime\fP Time to display 
.RE
.PP

.PP
Definition at line 151 of file qwt_analog_clock.cpp.
.PP
References QwtAbstractSlider::setValid(), and QwtAbstractSlider::setValue().
.PP
Referenced by setCurrentTime().
.SS "\fBQwtText\fP QwtAnalogClock::scaleLabel (double value) const\fC [protected, virtual]\fP"
.PP
Find the scale label for a given value
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP Value 
.RE
.PP
\fBReturns:\fP
.RS 4
Label 
.RE
.PP

.PP
Reimplemented from \fBQwtDial\fP.
.PP
Definition at line 168 of file qwt_analog_clock.cpp.
.SS "void QwtAnalogClock::drawNeedle (QPainter * painter, const QPoint & center, int radius, double direction, QPalette::ColorGroup cg) const\fC [protected, virtual]\fP"
.PP
Draw the needle. 
.PP
A clock has no single needle but three hands instead. drawNeedle translates \fBvalue()\fP into directions for the hands and calls \fBdrawHand()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIcenter\fP Center of the clock 
.br
\fIradius\fP Maximum length for the hands 
.br
\fIdirection\fP Dummy, not used. 
.br
\fIcg\fP ColorGroup
.RE
.PP
\fBSee also:\fP
.RS 4
\fBQwtAnalogClock::drawHand()\fP 
.RE
.PP

.PP
Reimplemented from \fBQwtDial\fP.
.PP
Definition at line 191 of file qwt_analog_clock.cpp.
.PP
References drawHand(), QwtAbstractSlider::isValid(), QwtDial::origin(), and QwtDoubleRange::value().
.SS "void QwtAnalogClock::drawHand (QPainter * painter, \fBHand\fP hd, const QPoint & center, int radius, double direction, QPalette::ColorGroup cg) const\fC [protected, virtual]\fP"
.PP
Draw a clock hand
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIhd\fP Specify the type of hand 
.br
\fIcenter\fP Center of the clock 
.br
\fIradius\fP Maximum length for the hands 
.br
\fIdirection\fP Direction of the hand in degrees, counter clockwise 
.br
\fIcg\fP ColorGroup 
.RE
.PP

.PP
Definition at line 220 of file qwt_analog_clock.cpp.
.PP
References QwtDialNeedle::draw(), hand(), and QwtDial::needle().
.PP
Referenced by drawNeedle().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
