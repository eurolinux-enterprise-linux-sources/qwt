.TH "QwtLegend" 3 "24 May 2008" "Version 5.1.1" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtLegend \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
The legend widget. 

The \fBQwtLegend\fP widget is a tabular arrangement of legend items. Legend items might be any type of widget, but in general they will be a \fBQwtLegendItem\fP.
.PP
\fBSee also:\fP
.RS 4
\fBQwtLegendItem\fP, \fBQwtLegendItemManager\fP \fBQwtPlot\fP 
.RE
.PP

.PP
Definition at line 36 of file qwt_legend.h.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBLegendDisplayPolicy\fP { \fBNoIdentifier\fP =  0, \fBFixedIdentifier\fP =  1, \fBAutoIdentifier\fP =  2 }"
.br
.ti -1c
.RI "enum \fBLegendItemMode\fP { \fBReadOnlyItem\fP, \fBClickableItem\fP, \fBCheckableItem\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtLegend\fP (QWidget *parent=NULL)"
.br
.ti -1c
.RI "virtual \fB~QwtLegend\fP ()"
.br
.ti -1c
.RI "void \fBsetDisplayPolicy\fP (\fBLegendDisplayPolicy\fP policy, int mode)"
.br
.ti -1c
.RI "\fBLegendDisplayPolicy\fP \fBdisplayPolicy\fP () const"
.br
.ti -1c
.RI "void \fBsetItemMode\fP (\fBLegendItemMode\fP)"
.br
.ti -1c
.RI "\fBLegendItemMode\fP \fBitemMode\fP () const"
.br
.ti -1c
.RI "int \fBidentifierMode\fP () const"
.br
.ti -1c
.RI "QWidget * \fBcontentsWidget\fP ()"
.br
.ti -1c
.RI "const QWidget * \fBcontentsWidget\fP () const"
.br
.ti -1c
.RI "void \fBinsert\fP (const \fBQwtLegendItemManager\fP *, QWidget *)"
.br
.ti -1c
.RI "void \fBremove\fP (const \fBQwtLegendItemManager\fP *)"
.br
.ti -1c
.RI "QWidget * \fBfind\fP (const \fBQwtLegendItemManager\fP *) const"
.br
.ti -1c
.RI "\fBQwtLegendItemManager\fP * \fBfind\fP (const QWidget *) const"
.br
.ti -1c
.RI "virtual QList< QWidget * > \fBlegendItems\fP () const"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "bool \fBisEmpty\fP () const"
.br
.ti -1c
.RI "uint \fBitemCount\fP () const"
.br
.ti -1c
.RI "virtual bool \fBeventFilter\fP (QObject *, QEvent *)"
.br
.ti -1c
.RI "virtual QSize \fBsizeHint\fP () const"
.br
.ti -1c
.RI "virtual int \fBheightForWidth\fP (int w) const"
.br
.ti -1c
.RI "QScrollBar * \fBhorizontalScrollBar\fP () const"
.br
.ti -1c
.RI "QScrollBar * \fBverticalScrollBar\fP () const"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBresizeEvent\fP (QResizeEvent *)"
.br
.ti -1c
.RI "virtual void \fBlayoutContents\fP ()"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtLegend::LegendDisplayPolicy\fP"
.PP
Display policy. 
.PP
.IP "\(bu" 2
NoIdentifier
.br
 The client code is responsible how to display of each legend item. The Qwt library will not interfere.
.PP
.PP
.IP "\(bu" 2
FixedIdentifier
.br
 All legend items are displayed with the \fBQwtLegendItem::IdentifierMode\fP to be passed in 'mode'.
.PP
.PP
.IP "\(bu" 2
AutoIdentifier
.br
 Each legend item is displayed with a mode that is a bitwise or of
.IP "  \(bu" 4
QwtLegendItem::ShowLine (if its curve is drawn with a line) and
.IP "  \(bu" 4
QwtLegendItem::ShowSymbol (if its curve is drawn with symbols) and
.IP "  \(bu" 4
QwtLegendItem::ShowText (if the has a title).
.PP

.PP
.PP
Default is AutoIdentifier. 
.PP
\fBSee also:\fP
.RS 4
\fBsetDisplayPolicy()\fP, \fBdisplayPolicy()\fP, \fBQwtLegendItem::IdentifierMode\fP 
.RE
.PP

.PP
Definition at line 62 of file qwt_legend.h.
.SS "enum \fBQwtLegend::LegendItemMode\fP"
.PP
Interaction mode for the legend items. 
.PP
Definition at line 70 of file qwt_legend.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtLegend::QwtLegend (QWidget * parent = \fCNULL\fP)\fC [explicit]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP Parent widget 
.RE
.PP

.PP
Definition at line 258 of file qwt_legend.cpp.
.SS "QwtLegend::~QwtLegend ()\fC [virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 283 of file qwt_legend.cpp.
.SH "Member Function Documentation"
.PP 
.SS "void QwtLegend::setDisplayPolicy (\fBLegendDisplayPolicy\fP policy, int mode)"
.PP
Set the legend display policy to:
.PP
\fBParameters:\fP
.RS 4
\fIpolicy\fP Legend display policy 
.br
\fImode\fP Identifier mode (or'd ShowLine, ShowSymbol, ShowText)
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdisplayPolicy\fP, \fBLegendDisplayPolicy\fP 
.RE
.PP

.PP
Definition at line 296 of file qwt_legend.cpp.
.PP
References QwtLegendItemManager::updateLegend().
.SS "\fBQwtLegend::LegendDisplayPolicy\fP QwtLegend::displayPolicy () const"
.PP
\fBReturns:\fP
.RS 4
the legend display policy. Default is LegendDisplayPolicy::Auto. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBsetDisplayPolicy\fP, \fBLegendDisplayPolicy\fP 
.RE
.PP

.PP
Definition at line 324 of file qwt_legend.cpp.
.PP
Referenced by QwtPlotCurve::updateLegend().
.SS "int QwtLegend::identifierMode () const"
.PP
\fBReturns:\fP
.RS 4
the IdentifierMode to be used in combination with LegendDisplayPolicy::Fixed.
.RE
.PP
Default is ShowLine | ShowSymbol | ShowText. 
.PP
Definition at line 346 of file qwt_legend.cpp.
.PP
Referenced by QwtPlotCurve::updateLegend().
.SS "QWidget * QwtLegend::contentsWidget ()"
.PP
The contents widget is the only child of the viewport() and the parent widget of all legend items. 
.PP
Definition at line 355 of file qwt_legend.cpp.
.PP
Referenced by insert(), and QwtPlot::printLegend().
.SS "const QWidget * QwtLegend::contentsWidget () const"
.PP
The contents widget is the only child of the viewport() and the parent widget of all legend items. 
.PP
Definition at line 375 of file qwt_legend.cpp.
.SS "void QwtLegend::insert (const \fBQwtLegendItemManager\fP * plotItem, QWidget * legendItem)"
.PP
Insert a new item for a plot item 
.PP
\fBParameters:\fP
.RS 4
\fIplotItem\fP Plot item 
.br
\fIlegendItem\fP New legend item 
.RE
.PP
\fBNote:\fP
.RS 4
The parent of item will be changed to \fBQwtLegend::contentsWidget()\fP 
.RE
.PP

.PP
Definition at line 386 of file qwt_legend.cpp.
.PP
References contentsWidget(), and layoutContents().
.PP
Referenced by QwtPlotItem::updateLegend().
.SS "void QwtLegend::remove (const \fBQwtLegendItemManager\fP * plotItem)"
.PP
Find the corresponding item for a plotItem and remove it from the item list.
.PP
\fBParameters:\fP
.RS 4
\fIplotItem\fP Plot item 
.RE
.PP

.PP
Definition at line 482 of file qwt_legend.cpp.
.SS "QWidget * QwtLegend::find (const \fBQwtLegendItemManager\fP * plotItem) const"
.PP
Find the widget that represents a plot item
.PP
\fBParameters:\fP
.RS 4
\fIplotItem\fP Plot item 
.RE
.PP
\fBReturns:\fP
.RS 4
Widget on the legend, or NULL 
.RE
.PP

.PP
Definition at line 460 of file qwt_legend.cpp.
.PP
Referenced by QwtPlotPrintFilter::reset(), QwtPlotItem::updateLegend(), and QwtPlotCurve::updateLegend().
.SS "\fBQwtLegendItemManager\fP * QwtLegend::find (const QWidget * legendItem) const"
.PP
Find the widget that represents a plot item
.PP
\fBParameters:\fP
.RS 4
\fIplotItem\fP Plot item 
.RE
.PP
\fBReturns:\fP
.RS 4
Widget on the legend, or NULL 
.RE
.PP

.PP
Definition at line 471 of file qwt_legend.cpp.
.SS "void QwtLegend::clear ()"
.PP
Remove all items. 
.PP
Definition at line 490 of file qwt_legend.cpp.
.SS "bool QwtLegend::isEmpty () const"
.PP
Return true, if there are no legend items. 
.PP
Definition at line 617 of file qwt_legend.cpp.
.PP
Referenced by QwtPlotLayout::activate(), and QwtPlot::print().
.SS "uint QwtLegend::itemCount () const"
.PP
Return the number of legend items. 
.PP
Definition at line 623 of file qwt_legend.cpp.
.SS "QSize QwtLegend::sizeHint () const\fC [virtual]\fP"
.PP
Return a size hint. 
.PP
Definition at line 506 of file qwt_legend.cpp.
.SS "int QwtLegend::heightForWidth (int width) const\fC [virtual]\fP"
.PP
\fBReturns:\fP
.RS 4
The preferred height, for the width w. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIwidth\fP Width 
.RE
.PP

.PP
Definition at line 518 of file qwt_legend.cpp.
.SS "void QwtLegend::resizeEvent (QResizeEvent * e)\fC [protected, virtual]\fP"
.PP
Resize event 
.PP
\fBParameters:\fP
.RS 4
\fIe\fP Event 
.RE
.PP

.PP
Definition at line 654 of file qwt_legend.cpp.
.SS "void QwtLegend::layoutContents ()\fC [protected, virtual]\fP"
.PP
Adjust contents widget and item layout to the size of the viewport(). 
.PP
Definition at line 543 of file qwt_legend.cpp.
.PP
Referenced by eventFilter(), and insert().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
